{"version":3,"file":"middletier.js","mappings":"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","sources":["webpack://office-addin-taskpane-sso-js/webpack/bootstrap","webpack://office-addin-taskpane-sso-js/webpack/runtime/compat get default export","webpack://office-addin-taskpane-sso-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-sso-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-sso-js/external commonjs \"http-errors\"","webpack://office-addin-taskpane-sso-js/external commonjs \"path\"","webpack://office-addin-taskpane-sso-js/external commonjs \"cookie-parser\"","webpack://office-addin-taskpane-sso-js/external commonjs \"morgan\"","webpack://office-addin-taskpane-sso-js/external commonjs \"express\"","webpack://office-addin-taskpane-sso-js/external node-commonjs \"https\"","webpack://office-addin-taskpane-sso-js/external commonjs \"office-addin-dev-certs\"","webpack://office-addin-taskpane-sso-js/external commonjs \"node-fetch\"","webpack://office-addin-taskpane-sso-js/external commonjs \"form-urlencoded\"","webpack://office-addin-taskpane-sso-js/external commonjs \"jsonwebtoken\"","webpack://office-addin-taskpane-sso-js/external commonjs \"jwks-rsa\"","webpack://office-addin-taskpane-sso-js/./src/middle-tier/ssoauth-helper.js","webpack://office-addin-taskpane-sso-js/./src/middle-tier/msgraph-helper.js","webpack://office-addin-taskpane-sso-js/./src/middle-tier/app.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"http-errors\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"cookie-parser\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"morgan\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"express\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"https\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"office-addin-dev-certs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node-fetch\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"form-urlencoded\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"jsonwebtoken\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"jwks-rsa\");","/*\n * Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See full license in root of repo. -->\n *\n * This file defines the routes within the authRoute router.\n */\n\nimport fetch from \"node-fetch\";\nimport form from \"form-urlencoded\";\nimport jwt from \"jsonwebtoken\";\nimport { JwksClient } from \"jwks-rsa\";\n\n/* global process, console */\n\nconst DISCOVERY_KEYS_ENDPOINT = \"https://login.microsoftonline.com/common/discovery/v2.0/keys\";\n\nexport async function getAccessToken(authorization) {\n  if (!authorization) {\n    let error = new Error(\"No Authorization header was found.\");\n    return Promise.reject(error);\n  } else {\n    const scopeName = process.env.SCOPE || \"User.Read\";\n    const [, /* schema */ assertion] = authorization.split(\" \");\n\n    const tokenScopes = jwt.decode(assertion).scp.split(\" \");\n    const accessAsUserScope = tokenScopes.find((scope) => scope === \"access_as_user\");\n    if (!accessAsUserScope) {\n      throw new Error(\"Missing access_as_user\");\n    }\n\n    const formParams = {\n      client_id: process.env.CLIENT_ID,\n      client_secret: process.env.CLIENT_SECRET,\n      grant_type: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n      assertion: assertion,\n      requested_token_use: \"on_behalf_of\",\n      scope: [scopeName].join(\" \"),\n    };\n\n    const stsDomain = \"https://login.microsoftonline.com\";\n    const tenant = \"common\";\n    const tokenURLSegment = \"oauth2/v2.0/token\";\n    const encodedForm = form(formParams);\n\n    const tokenResponse = await fetch(`${stsDomain}/${tenant}/${tokenURLSegment}`, {\n      method: \"POST\",\n      body: encodedForm,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    });\n    const json = await tokenResponse.json();\n    return json;\n  }\n}\n\nexport function validateJwt(req, res, next) {\n  const authHeader = req.headers.authorization;\n  if (authHeader) {\n    const token = authHeader.split(\" \")[1];\n\n    const validationOptions = {\n      audience: process.env.CLIENT_ID,\n    };\n\n    jwt.verify(token, getSigningKeys, validationOptions, (err) => {\n      if (err) {\n        console.log(err);\n        return res.sendStatus(403);\n      }\n\n      next();\n    });\n  }\n}\n\nfunction getSigningKeys(header, callback) {\n  var client = new JwksClient({\n    jwksUri: DISCOVERY_KEYS_ENDPOINT,\n  });\n\n  client.getSigningKey(header.kid, function (err, key) {\n    callback(null, key.getPublicKey());\n  });\n}\n","// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See full license in the root of the repo.\n/*\n    This file provides the provides functionality to get Microsoft Graph data.\n*/\nimport * as https from \"https\";\nimport { getAccessToken } from \"./ssoauth-helper\";\nimport * as createError from \"http-errors\";\n\n/* global process */\n\nconst domain = \"graph.microsoft.com\";\nconst version = \"v1.0\";\n\nexport async function getUserData(req, res, next) {\n  const authorization = req.get(\"Authorization\");\n\n  await getAccessToken(authorization)\n    .then(async (graphTokenResponse) => {\n      if (graphTokenResponse && (graphTokenResponse.claims || graphTokenResponse.error)) {\n        res.send(graphTokenResponse);\n      } else {\n        const graphToken = graphTokenResponse.access_token;\n        const graphUrlSegment = process.env.GRAPH_URL_SEGMENT || \"/me\";\n        const graphQueryParamSegment = process.env.QUERY_PARAM_SEGMENT || \"\";\n\n        const graphData = await getGraphData(graphToken, graphUrlSegment, graphQueryParamSegment);\n\n        // If Microsoft Graph returns an error, such as invalid or expired token,\n        // there will be a code property in the returned object set to a HTTP status (e.g. 401).\n        // Relay it to the client. It will caught in the fail callback of `makeGraphApiCall`.\n        if (graphData.code) {\n          next(createError(graphData.code, \"Microsoft Graph error \" + JSON.stringify(graphData)));\n        } else {\n          res.send(graphData);\n        }\n      }\n    })\n    .catch((err) => {\n      res.status(401).send(err.message);\n      return;\n    });\n}\n\nexport async function getGraphData(accessToken, apiUrl, queryParams) {\n  return new Promise((resolve, reject) => {\n    const options = {\n      host: domain,\n      path: \"/\" + version + apiUrl + queryParams,\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: \"Bearer \" + accessToken,\n        \"Cache-Control\": \"private, no-cache, no-store, must-revalidate\",\n        Expires: \"-1\",\n        Pragma: \"no-cache\",\n      },\n    };\n\n    https\n      .get(options, (response) => {\n        let body = \"\";\n        response.on(\"data\", (d) => {\n          body += d;\n        });\n        response.on(\"end\", () => {\n          // The response from the OData endpoint might be an error, say a\n          // 401 if the endpoint requires an access token and it was invalid\n          // or expired. But a message is not an error in the call of https.get,\n          // so the \"on('error', reject)\" line below isn't triggered.\n          // So, the code distinguishes success (200) messages from error\n          // messages and sends a JSON object to the caller with either the\n          // requested OData or error information.\n\n          let error;\n          if (response.statusCode === 200) {\n            let parsedBody = JSON.parse(body);\n            resolve(parsedBody);\n          } else {\n            error = new Error();\n            error.code = response.statusCode;\n            error.message = response.statusMessage;\n\n            // The error body sometimes includes an empty space\n            // before the first character, remove it or it causes an error.\n            body = body.trim();\n            error.bodyCode = JSON.parse(body).error.code;\n            error.bodyMessage = JSON.parse(body).error.message;\n            resolve(error);\n          }\n        });\n      })\n      .on(\"error\", reject);\n  });\n}\n","/*\n * Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See full license in root of repo. -->\n *\n * This file is the main Node.js server file that defines the express middleware.\n */\n\nif (process.env.NODE_ENV !== \"production\") {\n    require(\"dotenv\").config();\n  }\n  import * as createError from \"http-errors\";\n  import * as path from \"path\";\n  import * as cookieParser from \"cookie-parser\";\n  import * as logger from \"morgan\";\n  import express from \"express\";\n  import https from \"https\";\n  import { getHttpsServerOptions } from \"office-addin-dev-certs\";\n  import { getUserData } from \"./msgraph-helper\";\n  import { validateJwt } from \"./ssoauth-helper\";\n  \n  /* global console, process, require, __dirname */\n  \n  const app = express();\n  const port = process.env.API_PORT || \"3000\";\n  \n  app.set(\"port\", port);\n  \n  // view engine setup\n  app.set(\"views\", path.join(__dirname, \"views\"));\n  app.set(\"view engine\", \"pug\");\n  \n  app.use(logger(\"dev\"));\n  app.use(express.json());\n  app.use(express.urlencoded({ extended: false }));\n  app.use(cookieParser());\n  \n  /* Turn off caching when developing */\n  if (process.env.NODE_ENV !== \"production\") {\n    app.use(express.static(path.join(process.cwd(), \"dist\"), { etag: false }));\n  \n    app.use(function (req, res, next) {\n      res.header(\"Cache-Control\", \"private, no-cache, no-store, must-revalidate\");\n      res.header(\"Expires\", \"-1\");\n      res.header(\"Pragma\", \"no-cache\");\n      next();\n    });\n  } else {\n    // In production mode, let static files be cached.\n    app.use(express.static(path.join(process.cwd(), \"dist\")));\n  }\n  \n  const indexRouter = express.Router();\n  indexRouter.get(\"/\", function (req, res) {\n    res.render(\"/taskpane.html\");\n  });\n  \n  app.use(\"/\", indexRouter);\n  \n  // Middle-tier API calls\n  // listen for 'ping' to verify service is running\n  // Un comment for development debugging, but un needed for production deployment\n  // app.get(\"/ping\", function (req: any, res: any) {\n  //   res.send(process.platform);\n  // });\n  \n  app.get(\"/getuserdata\", validateJwt, getUserData);\n  \n  // Get the client side task pane files requested\n  app.get(\"/taskpane.html\", async (req, res) => {\n    return res.sendfile(\"taskpane.html\");\n  });\n  \n  app.get(\"/fallbackauthdialog.html\", async (req, res) => {\n    return res.sendfile(\"fallbackauthdialog.html\");\n  });\n  \n  // Catch 404 and forward to error handler\n  app.use(function (req, res, next) {\n    next(createError(404));\n  });\n  \n  // error handler\n  app.use(function (err, req, res) {\n    // set locals, only providing error in development\n    res.locals.message = err.message;\n    res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\n  \n    // render the error page\n    res.status(err.status || 500);\n    res.render(\"error\");\n  });\n  \n  getHttpsServerOptions().then((options) => {\n    https\n      .createServer(options, app)\n      .listen(port, () => console.log(`Server running on ${port} in ${process.env.NODE_ENV} mode`));\n  });\n  "],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","require","_regeneratorRuntime","Op","hasOwn","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_arrayLikeToArray","arr","len","arr2","Array","asyncGeneratorStep","gen","_next","_throw","getAccessToken","_x","_getAccessToken","apply","arguments","_callee","authorization","scopeName","_authorization$split","_authorization$split2","assertion","formParams","encodedForm","tokenResponse","json","_context","process","env","SCOPE","split","isArray","_arrayWithHoles","_i","_s","_e","_r","_arr","_n","_d","_iterableToArrayLimit","minLen","n","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","jwt","scp","find","scope","client_id","CLIENT_ID","client_secret","CLIENT_SECRET","grant_type","requested_token_use","join","form","fetch","concat","body","headers","Accept","args","getSigningKeys","header","callback","JwksClient","jwksUri","getSigningKey","kid","getPublicKey","_asyncToGenerator","domain","version","_getUserData","_callee2","req","res","_context2","_ref","graphTokenResponse","graphToken","graphUrlSegment","graphQueryParamSegment","graphData","claims","send","access_token","GRAPH_URL_SEGMENT","QUERY_PARAM_SEGMENT","getGraphData","code","createError","JSON","stringify","_x7","status","message","_x4","_x5","_x6","_getGraphData","_callee3","accessToken","apiUrl","queryParams","_context3","options","host","path","Authorization","Expires","Pragma","https","response","on","statusCode","parsedBody","parse","statusMessage","trim","bodyCode","bodyMessage","app","express","port","API_PORT","set","__dirname","use","logger","extended","cookieParser","cwd","indexRouter","render","authHeader","token","validationOptions","audience","console","log","sendStatus","_x2","_x3","sendfile","_ref2","locals","getHttpsServerOptions","listen"],"sourceRoot":""}