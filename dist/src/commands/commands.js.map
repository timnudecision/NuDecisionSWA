{"version":3,"file":"commands.js","sourceRoot":"","sources":["../../../src/commands/commands.js"],"names":[],"mappings":"AAAA;;;GAGG;;;;;IAEH,yCAAyC;IAEzC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;QAClB,6CAA6C;IAC/C,CAAC,CAAC,CAAC;IAEH;;;OAGG;IACH,SAAgB,MAAM,CAAC,KAAK;QAC1B,MAAM,OAAO,GAAG;YACd,IAAI,EAAE,MAAM,CAAC,YAAY,CAAC,2BAA2B,CAAC,oBAAoB;YAC1E,OAAO,EAAE,mBAAmB;YAC5B,IAAI,EAAE,YAAY;YAClB,UAAU,EAAE,IAAI;SACjB,CAAC;QAEF,8BAA8B;QAC9B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAEjF,mEAAmE;QACnE,KAAK,CAAC,SAAS,EAAE,CAAC;IACpB,CAAC;IAbD,wBAaC;IAED,SAAS,SAAS;QAChB,OAAO,OAAO,IAAI,KAAK,WAAW;YAChC,CAAC,CAAC,IAAI;YACN,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW;gBAC/B,CAAC,CAAC,MAAM;gBACR,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW;oBAC/B,CAAC,CAAC,MAAM;oBACR,CAAC,CAAC,SAAS,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,GAAG,SAAS,EAAE,CAAC;IAEtB,oEAAoE;IACpE,CAAC,CAAC,MAAM,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global global, Office, self, window */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called\n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event\n */\nexport function action(event) {\n  const message = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\n\n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\n\nfunction getGlobal() {\n  return typeof self !== \"undefined\"\n    ? self\n    : typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n    ? global\n    : undefined;\n}\n\nconst g = getGlobal();\n\n// the add-in command functions need to be available in global scope\ng.action;\n"]}