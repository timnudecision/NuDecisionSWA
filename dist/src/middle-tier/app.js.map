{"version":3,"file":"app.js","sourceRoot":"","sources":["../../../src/middle-tier/app.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See full license in root of repo. -->\n *\n * This file is the main Node.js server file that defines the express middleware.\n */\n\nif (process.env.NODE_ENV !== \"production\") {\n    require(\"dotenv\").config();\n  }\n  import * as createError from \"http-errors\";\n  import * as path from \"path\";\n  import * as cookieParser from \"cookie-parser\";\n  import * as logger from \"morgan\";\n  import express from \"express\";\n  import https from \"https\";\n  import { getHttpsServerOptions } from \"office-addin-dev-certs\";\n  import { getUserData } from \"./msgraph-helper\";\n  import { validateJwt } from \"./ssoauth-helper\";\n  \n  /* global console, process, require, __dirname */\n  \n  const app = express();\n  const port = process.env.API_PORT || \"3000\";\n  \n  app.set(\"port\", port);\n  \n  // view engine setup\n  app.set(\"views\", path.join(__dirname, \"views\"));\n  app.set(\"view engine\", \"pug\");\n  \n  app.use(logger(\"dev\"));\n  app.use(express.json());\n  app.use(express.urlencoded({ extended: false }));\n  app.use(cookieParser());\n  \n  /* Turn off caching when developing */\n  if (process.env.NODE_ENV !== \"production\") {\n    app.use(express.static(path.join(process.cwd(), \"dist\"), { etag: false }));\n  \n    app.use(function (req, res, next) {\n      res.header(\"Cache-Control\", \"private, no-cache, no-store, must-revalidate\");\n      res.header(\"Expires\", \"-1\");\n      res.header(\"Pragma\", \"no-cache\");\n      next();\n    });\n  } else {\n    // In production mode, let static files be cached.\n    app.use(express.static(path.join(process.cwd(), \"dist\")));\n  }\n  \n  const indexRouter = express.Router();\n  indexRouter.get(\"/\", function (req, res) {\n    res.render(\"/taskpane.html\");\n  });\n  \n  app.use(\"/\", indexRouter);\n  \n  // Middle-tier API calls\n  // listen for 'ping' to verify service is running\n  // Un comment for development debugging, but un needed for production deployment\n  // app.get(\"/ping\", function (req: any, res: any) {\n  //   res.send(process.platform);\n  // });\n  \n  app.get(\"/getuserdata\", validateJwt, getUserData);\n  \n  // Get the client side task pane files requested\n  app.get(\"/taskpane.html\", async (req, res) => {\n    return res.sendfile(\"taskpane.html\");\n  });\n  \n  app.get(\"/fallbackauthdialog.html\", async (req, res) => {\n    return res.sendfile(\"fallbackauthdialog.html\");\n  });\n  \n  // Catch 404 and forward to error handler\n  app.use(function (req, res, next) {\n    next(createError(404));\n  });\n  \n  // error handler\n  app.use(function (err, req, res) {\n    // set locals, only providing error in development\n    res.locals.message = err.message;\n    res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\n  \n    // render the error page\n    res.status(err.status || 500);\n    res.render(\"error\");\n  });\n  \n  getHttpsServerOptions().then((options) => {\n    https\n      .createServer(options, app)\n      .listen(port, () => console.log(`Server running on ${port} in ${process.env.NODE_ENV} mode`));\n  });\n  "]}