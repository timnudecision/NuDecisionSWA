{"version":3,"file":"taskpane.js","sourceRoot":"","sources":["../../../src/taskpane/taskpane.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n//const fallbackAuthHelper = require(\"./../authentication/authhelper\");\nimport * as fallbackAuthHelper from \"./../authentication/authhelper\";\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"getProfileButton\").onclick = run1;\n  }\n});\n\nexport async function run1() {\n  InitAuth();\n}\n\nfunction InitAuth() {\n  var authh = new fallbackAuthHelper.AuthHelper();\n  authh.DialogFallback(setauthcookie);\n}\n\nasync function setauthcookie(res, err) {\n  localStorage.setItem(\"docregisterauth\", res);\n  console.log(res);\n  const usrprofile = await getGraphdata(res);\n  console.log(usrprofile);\n  var roles = [\"Admin\", \"User\"]; // for local testing ONLY\n  if (process.env.NODE_ENV !== \"development\") roles = await GetRoles(usrprofile.mail);\n  roles = roles.concat(process.env.NODE_ENV);\n  console.log(roles);\n  document.getElementById(\"login-area\").style.display = \"none\";\n  document.getElementById(\"role-area\").style.display = \"block\";\n  document.getElementById(\"message-area\").style.display = \"block\";\n  if (roles.length == 0) {\n    var li = document.createElement(\"li\");\n    li.append(\"No Roles defined for this login\");\n    document.getElementById(\"message-area\").append(li);\n  } else {\n    for (var i = 0; i < roles.length; i++) {\n      var li = document.createElement(\"li\");\n      li.append(roles[i]);\n      document.getElementById(\"message-area\").append(li);\n    }\n  }\n}\n\nasync function GetRoles(email) {\n  const url = \"https://\" + window.location.host + \"/api/Auth?name=\" + email;\n  let res = await fetch(url);\n  let resbody = await res.json();\n  return resbody;\n  //console.log(resbody);\n}\n\nasync function getGraphdata(accesstoken) {\n  const domain = \"https://graph.microsoft.com/v1.0/me\";\n  const headers1 = {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    Authorization: \"Bearer \" + accesstoken,\n  };\n\n  let res = await fetch(domain, { headers: headers1 });\n  let resbody = await res.json();\n  return resbody;\n}\n"]}